// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Menu should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Menu />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        className="menuForm"
      >
        <label
          className="nameInputLabel"
          htmlFor="nameInput"
        >
          Student
        </label>
        <input
          className="nameInput"
          id="nameInput"
          placeholder="Your name here....."
          type="text"
        />
        <h3
          className="chooseDeckHeading"
        >
          Which terms would you like to review?
        </h3>
      </form>,
      "className": "mainMenu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            className="nameInputLabel"
            htmlFor="nameInput"
          >
            Student
          </label>,
          <input
            className="nameInput"
            id="nameInput"
            placeholder="Your name here....."
            type="text"
          />,
          <h3
            className="chooseDeckHeading"
          >
            Which terms would you like to review?
          </h3>,
        ],
        "className": "menuForm",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Student",
            "className": "nameInputLabel",
            "htmlFor": "nameInput",
          },
          "ref": null,
          "rendered": "Student",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "nameInput",
            "id": "nameInput",
            "placeholder": "Your name here.....",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Which terms would you like to review?",
            "className": "chooseDeckHeading",
          },
          "ref": null,
          "rendered": "Which terms would you like to review?",
          "type": "h3",
        },
      ],
      "type": "form",
    },
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          className="menuForm"
        >
          <label
            className="nameInputLabel"
            htmlFor="nameInput"
          >
            Student
          </label>
          <input
            className="nameInput"
            id="nameInput"
            placeholder="Your name here....."
            type="text"
          />
          <h3
            className="chooseDeckHeading"
          >
            Which terms would you like to review?
          </h3>
        </form>,
        "className": "mainMenu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              className="nameInputLabel"
              htmlFor="nameInput"
            >
              Student
            </label>,
            <input
              className="nameInput"
              id="nameInput"
              placeholder="Your name here....."
              type="text"
            />,
            <h3
              className="chooseDeckHeading"
            >
              Which terms would you like to review?
            </h3>,
          ],
          "className": "menuForm",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Student",
              "className": "nameInputLabel",
              "htmlFor": "nameInput",
            },
            "ref": null,
            "rendered": "Student",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "nameInput",
              "id": "nameInput",
              "placeholder": "Your name here.....",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Which terms would you like to review?",
              "className": "chooseDeckHeading",
            },
            "ref": null,
            "rendered": "Which terms would you like to review?",
            "type": "h3",
          },
        ],
        "type": "form",
      },
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
