// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="memozieHeading"
        >
          Memoize
        </h1>,
        <h2
          className="subHeading"
        >
          Ok brain, time to learn some stuff.
        </h2>,
      ],
      "className": "pageHeader",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Memoize",
          "className": "memozieHeading",
        },
        "ref": null,
        "rendered": "Memoize",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Ok brain, time to learn some stuff.",
          "className": "subHeading",
        },
        "ref": null,
        "rendered": "Ok brain, time to learn some stuff.",
        "type": "h2",
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="memozieHeading"
          >
            Memoize
          </h1>,
          <h2
            className="subHeading"
          >
            Ok brain, time to learn some stuff.
          </h2>,
        ],
        "className": "pageHeader",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Memoize",
            "className": "memozieHeading",
          },
          "ref": null,
          "rendered": "Memoize",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Ok brain, time to learn some stuff.",
            "className": "subHeading",
          },
          "ref": null,
          "rendered": "Ok brain, time to learn some stuff.",
          "type": "h2",
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
